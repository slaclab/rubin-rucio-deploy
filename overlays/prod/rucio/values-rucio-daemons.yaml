# Default values for rucio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## judgeCleanerCount gives the number of judge-cleaner pods to run
abacusAccountCount: 1
abacusCollectionReplicaCount: 1
abacusRseCount: 1
automatixCount: 1
cacheConsumerCount: 0
conveyorTransferSubmitterCount: 1
conveyorPollerCount: 1
conveyorFinisherCount: 1
conveyorReceiverCount: 0
conveyorStagerCount: 0
conveyorThrottlerCount: 0
conveyorPreparerCount: 0
darkReaperCount: 0
hermesCount: 1
judgeCleanerCount: 1
judgeEvaluatorCount: 1
judgeInjectorCount: 1
judgeRepairerCount: 1
oauthManagerCount: 0
undertakerCount: 1
reaperCount: 1
transmogrifierCount: 1
tracerKronosCount: 0
minosCount: 1
minosTemporaryExpirationCount: 0
necromancerCount: 1

image:
  repository: rucio/rucio-daemons
  tag: release-35.6.0
  pullPolicy: Always

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

# Instead of specifying secrets explicitly, use ones with "expected" names as per "old" rucio
use_deprecated_implicit_secrets: true

podLabels: {}
# Enable Prometheus scraping of metrics
podAnnotations:
  prometheus.io/port: "8080"
  prometheus.io/scrape: "true"

minReadySeconds: 5

monitoring:
  enabled: false
  serviceMonitorEnabled: true
  exporterPort: 8080
  targetPort: 8080
  interval: 30s
  telemetryPath: /metrics
  namespace: monitoring
  labels:
    release: prometheus-operator

abacusAccount:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

abacusCollectionReplica:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

abacusRse:
  fillHistoryTable: 0
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

automatix:
  sleepTime: 21600
  threads: 1
  inputFile: "/opt/rucio/etc/automatix.json"
  podAnnotations: {}
  resources:
    limits:
      memory: "1400Mi"
      cpu: "900m"
    requests:
      memory: "1200Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

cacheConsumer:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "600Mi"
      cpu: "700m"
    requests:
      memory: "400Mi"
      cpu: "500m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorTransferSubmitter:
  threads: 8
  podAnnotations: {}
  activities: "'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
  sleepTime: 120
  archiveTimeout: ""
  groupBulk: 50
  resources:
    limits:
      memory: "1000Mi"
      cpu: "1200m"
    requests:
      memory: "900Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorPoller:
  threads: 8
  podAnnotations: {}
  activities: "'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
  resources:
    limits:
      memory: "1500Mi"
      cpu: "900m"
    requests:
      memory: "1000Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorFinisher:
  threads: 8
  podAnnotations: {}
  activities: "'Data Brokering' 'Data Consolidation' 'Data rebalancing' 'Debug' 'Express' 'Functional Test' 'Group Subscriptions' Production Input' 'Production Output' Analysis Input' 'Analysis Output' 'Staging' 'T0 Export' 'T0 Tape' 'Upload/Download' 'User Subscriptions' 'Data Challenge'"
  resources:
    limits:
      memory: "800Mi"
      cpu: "2000m"
    requests:
      memory: "600Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorReceiver:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "1100m"
    requests:
      memory: "600Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorThrottler:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

conveyorPreparer:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

darkReaper:
  workers: 1
  chunkSize: "10"
  scheme: ""
  rses: ""
  includeRses: ""
  excludeRses: ""
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

hermes:
  threads: 2
  podAnnotations: {}
  bulk: 1000
  delay: 10
  brokerTimeout: 3
  resources:
    limits:
      memory: "600Mi"
      cpu: "700m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt
  - name: RUCIO_DAEMON
    value: hermesk
  - name: RUCIO_CFG_HERMES_ELASTIC_USERNAME
    value: rucio
  - name: RUCIO_CFG_HERMES_ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: usdf-rucio-elastic
        key: PASSWORD

judgeCleaner:
  threads: 4
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

judgeEvaluator:
  threads: 12
  podAnnotations: {}
  resources:
    limits:
      memory: "2800Mi"
      cpu: "1200m"
    requests:
      memory: "900Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

judgeInjector:
  threads: 5
  podAnnotations: {}
  resources:
    limits:
      memory: "900Mi"
      cpu: "700m"
    requests:
      memory: "600Mi"
      cpu: "500m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

judgeRepairer:
  threads: 12
  podAnnotations: {}
  resources:
    limits:
      memory: "1800Mi"
      cpu: "700m"
    requests:
      memory: "1200Mi"
      cpu: "500m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

oauthManager:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "600Mi"
      cpu: "900m"
    requests:
      memory: "400Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

undertaker:
  threads: 6
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

reaper:
  greedy: 0
  scheme: ""
  threads: 8
  includeRses: ""
  podAnnotations: {}
  resources:
    limits:
      memory: "2200Mi"
      cpu: "1700m"
    requests:
      memory: "2000Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

transmogrifier:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

tracerKronos:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "800Mi"
      cpu: "900m"
    requests:
      memory: "600Mi"
      cpu: "700m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

minos:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "600Mi"
      cpu: "1200m"
    requests:
      memory: "400Mi"
      cpu: "1000m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

minosTemporaryExpiration:
  threads: 1
  podAnnotations: {}
  resources:
    limits:
      memory: "600Mi"
      cpu: "700m"
    requests:
      memory: "400Mi"
      cpu: "500m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

necromancer:
  podAnnotations: {}
  resources:
    limits:
      memory: "600Mi"
      cpu: "700m"
    requests:
      memory: "400Mi"
      cpu: "500m"
  additionalEnvs:
  - name: PYTHONPATH
    value: /opt/rucio/permissions
  - name: RUCIO_CFG_DATABASE_DEFAULT
    valueFrom:
      secretKeyRef:
        name: usdf-db-conn-str
        key: db-conn-str.txt

ftsRenewal:
  enabled: 1
  schedule: "12 */6 * * *"
  image:
    repository: rucio/fts-cron
    tag: latest
    pullPolicy: Always
  servers: "https://fts-eval01.slac.stanford.edu:8446,https://lcgfts3.gridpp.rl.ac.uk:8446"
  script: 'default' # one of: 'default', 'atlas', 'dteam', 'multi_vo', 'tutorial', 'escape'. The associated scripts can be found here: https://github.com/rucio/containers/tree/master/fts-cron
  vos:
  - vo: "lsst"
    voms: "lsst:/lsst/Role=ddmopr"
  secretMounts:
  - secretName: voms-servers-file
    mountPath: /etc/vomses/vomses
    subPath: vomses
  - secretName: lsst-vomsdir
    mountPath: /etc/grid-security/vomsdir
    #- secretName: fts-cert
    #  mountPath: /opt/rucio/certs/usercert.pem
    #  subPath: usercert.pem
    #- secretName: fts-key
    #  mountPath: /opt/rucio/keys/new_userkey.pem
    #  subPath: new_userkey.pem
    # - secretName: longproxy
    #   mountPath: /opt/rucio/certs/long.proxy
    #   subPath: long.proxy
  additionalEnvs:
  #- name: RUCIO_FTS_SECRETS
  #  value: fnal-rucio-x509up
  - name: USERCERT_NAME
    value: "usercert.pem"
  - name: USERKEY_NAME
    value: "new_userkey.pem"
    # - name: RUCIO_LONG_PROXY
    #   value: long.proxy
    # - name: GRID_PASSPHRASE
    #   valueFrom:
    #     secretKeyRef:
    #       name:
    #       key:
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

automaticRestart:
  enabled: 0
  image:
    repository: bitnami/kubectl
    tag: latest
    pullPolicy: IfNotPresent
  schedule: "0 0 * * *"

secretMounts:
- secretName: rucio-automatix-input-file
  mountPath: /opt/rucio/etc/automatix.json
  subPath: automatix.json
- secretName: hermeskafka-constants
  mountPath: /usr/local/lib/python3.9/site-packages/rucio/common/constants.py
  subPath: constants.py
- secretName: policy-package
  mountPath: /opt/rucio/permissions/rubin

## common config values used to configure the Rucio daemons
config:
  client:
    rucio_host: "https://rubin-rucio.slac.stanford.edu:8443"
    auth_host: "https://rubin-rucio.slac.stanford.edu:8443"
    auth_type: "x509_proxy"
    account: "automatix"
    client_x509_proxy: "/opt/proxy/x509up"
    ca_cert: "/opt/certs"
    protocol_stat_retries: 6
    request_retries: 6
    # special_accounts: "panda, tier0"

  # common:
  ## config.common.logdir: the default directoy to write logs to (default: "/var/log/rucio")
  # logdir: "/var/log/rucio"
  ## config.common.logdir: the max loglevel (default: "DEBUG")
  # loglevel: "DEBUG"
  ## config.common.mailtemplatedir: directory containing the mail templates (default: "/opt/rucio/etc/mail_templates")
  # mailtemplatedir: "/opt/rucio/etc/mail_templates"

  # database:
  ## config.database.default: the connection string for the database (default: "sqlite:////tmp/rucio.db")
  # default: "sqlite:////tmp/rucio.db"
  ## config.database.schema: the schema used in the DB. only necessary when using Oracle.
  # schema: ""
  ## config.database.pool_reset_on_return: set the “reset on return” behavior of the pool (default: "rollback")
  # pool_reset_on_return: "rollback"
  ## config.database.echo: flag to control the logging of all statements to stdout (default: "0")
  # echo: "0"
  ## config.database.po0l_recycle: this setting causes the pool to recycle connections after the given number of seconds has passed (default: "600")
  # pool_recycle: "600"
  ## config.database.pool_size: the number of connections to keep open inside the connection pool
  # pool_size: ""
  ## config.database.pool_timeout: number of seconds to wait before giving up on getting a connection from the pool
  # pool_timeout: ""
  ## config.database.maxoverflow: the number of connections to allow in connection pool "overflow"
  # max_overflow: ""
  ## config.database.powuseraccount: user used to check the DB
  # powuseraccount: ""
  ## config.database.powuseraccount: password for user used to check the DB
  # powuserpassword: ""

  monitor:
    ## Turn on the Prometheus server for scraping of metrics (Default port 8080)
    enable_metrics: "True"
    ## config.monitor.carbon_server: address of carbon server used for graphite monitoring (default: "localhost")
    # carbon_server: "localhost"
    ## config.monitor.carbon_port: port of carbon server used for graphite monitoring (default: "8125")
    # carbon_server: "8125"
    ## config.monitor.user_scope: scope used on the graphite server (default: "default_docker")
    # user_scope: "default_docker"

  transfers:
    multihop_rse_expression: ""

  policy:
    package: rubin
    ## config.permission.policy: (default "generic")
    # permission: "generic"
    ## config.permission.schema: (default "generic")
    # schema: "lsst"
    ## config.permission.lfn2pfn_algorithm_default: (default "hash")
    # lfn2pfn_algorithm_default: "hash"
    ## config.permission.support: (default "https://github.com/rucio/rucio/issues/")
    # support: "https://github.com/rucio/rucio/issues/"
    ## config.permission.support_rucio: (default "https://github.com/rucio/rucio/issues/")
    # support_rucio: "https://github.com/rucio/rucio/issues/"

  automatix:
    rses: "FRDF_STS_DISK, IN2P3_BUTLER_DISK, LANCS_BUTLER_DISK, RAL_BUTLER_DISK, RAL_DATA_DISK, IN2P3_DATA_DISK, LANCS_DATA_DISK"
    dataset_lifetime: 18000
    set_metadata: "True"
    account: "automatix"
    scope: "user.automatix"
    did_prefix: "automatix"
    separator: "/"
    file_pattern: "dsn/uuid"
    dataset_pattern: "did_prefix/date/uuid"


  conveyor:
    scheme: "davs,gsiftp,http,https,root,srm"
    transfertool: "fts3"
    ftshosts: "https://fts-eval01.slac.stanford.edu:8446,https://lcgfts3.gridpp.rl.ac.uk:8446"
    cacert: "/opt/certs/ca.pem"
    usercert: "/opt/proxy/x509up"

    # cache_time: ""
    # user_deterministic_id: ""
    # poll_timeout: ""
    # submit_timeout: ""
    # bring_online: ""
    # queue_mode: ""
    # using_memcache: ""
    # ftsmonhosts: ""

  # messaging-fts3:
  # port: "61123"
  # ssl_key_file: "/etc/grid-security/hostkey.pem"
  # ssl_cert_file: "/etc/grid-security/hostcert.pem"
  # destination: "/topic/transfer.fts_monitoring_queue_state"
  # brokers: "dashb-test-mb.cern.ch"
  # voname: "atlas"

  #messaging-hermes:
  #  # username: ""
  #  # password: ""
  #  # port: "61023"
  #  # nonssl_port: ""
  #  use_ssl: "false"
  # ssl_key_file: "/etc/grid-security/hostkey.pem"
  # ssl_cert_file: "/etc/grid-security/hostcert.pem"
  # destination: "/topic/rucio.events"
  # brokers: "atlas-test-mb.cern.ch"
  # voname: "atlas"
  # email_from: "Rucio <atlas-adc-ddm-support@cern.ch"
  # email_test: ""

  hermes:
    services_list: kafka, elastic
    elastic_endpoint: "https://usdf-opensearch.slac.stanford.edu/rucio-events/_bulk"

  messaging-hermes-kafka:
    port: 9094
    nonssl_port: 9094
    use_ssl: False
    brokers: 134.79.23.221:9094
    message_filter: rucio.daemons.hermes.kafka.filters.filtered_list
    topic_list: SLAC_BUTLER_DEV_DISK,SLAC_BUTLER_DISK,SLAC_RAW_DISK,IN2P3_BUTLER_DISK,IN2P3_RAW_DISK,LANCS_BUTLER_DISK,LANCS_RAW_DISK,RAL_BUTLER_DISK,RAL_RAW_DISK

  # tracer-kronos:
  # brokers: "atlas-test-mb.cern.ch"
  # port: "61013"
  # ssl_key_file: "/etc/grid-security/hostkey.pem"
  # ssl_cert_file: "/etc/grid-security/hostcert.pem"
  # queue: "/queue/Consumer.kronos.rucio.tracer"
  # prefetch_size: "10"
  # chunksize: "10"
  # subscription_id: "rucio-tracer-listener"
  # use_ssl: "False"
  # reconnect_attempts: "100"
  # excluded_usrdns: ""
  # username: ""
  # password: ""
  # dataset_wait: 60

  transmogrifier:
    maxdids: 40000

  # messaging-cache:
  # port: "61123"
  # ssl_key_file: "/etc/grid-security/hostkey.pem"
  # ssl_cert_file: "/etc/grid-security/hostcert.pem"
  # destination: "/topic/rucio.cache"
  # brokers: "dashb-test-mb.cern.ch"
  # voname: "atlas"
  # account: "ddm"

  # credentials:
  # gcs: "/opt/rucio/etc/google-cloud-storage-test.json"
  # signature_lifetime: "3600"


